node{
  def mavenHome = tool name: 'maven3.8.6'
  stage('1cloneCode'){
    git "https://github.com/sagenis/maven-web-application.git"
  }
  stage('2Test&Build'){
    sh "${mavenHome}/bin/mvn clean package"
  }
  stage('3codeQuality'){
    sh "${mavenHome}/bin/mvn sonar:sonar"
  }
  stage('4uploadArtifacts'){
    nexusArtifactUploader artifacts: [[artifactId: 'maven-web-application', classifier: '', file: 'target/Tesla-app.war', type: 'war']], credentialsId: 'nexuscred', groupId: 'com.mt', nexusUrl: '172.31.93.28:8081/', nexusVersion: 'nexus3', protocol: 'http', repository: 'tesla-fe-releases', version: '0.0.1'
  } 
  stage('5deploy2UAT'){
    sh "echo 'deploy to UAT'  "
    deploy adapters: [tomcat8(credentialsId: 'tomcat-credentials', path: '', url: 'http://172.31.17.151:8080/')], contextPath: null, war: 'target/*war'
  }
  stage('6approvalGate'){
    sh "echo 'ready for review' "
    timeout(time:5, unit:'DAYS') {
    input message: 'Application ready for deployment, Please review and approve'
      }
  }
  stage('7deploy2Prod'){
    deploy adapters: [tomcat8(credentialsId: 'tomcat-credentials', path: '', url: 'http://172.31.17.151:8080/')], contextPath: null, war: 'target/*war'
  }
  stage('8emailNotification'){
    emailext body: '''hi all,

check build status

Enis Sag''', recipientProviders: [buildUser(), developers(), upstreamDevelopers(), brokenTestsSuspects(), brokenBuildSuspects(), contributor()], subject: 'build status', to: 'tesla-app@gmail.com'
  }
}
